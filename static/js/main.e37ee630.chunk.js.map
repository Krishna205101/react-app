{"version":3,"sources":["resume.js","App.js","serviceWorker.js","index.js","images/images.png"],"names":["resume","props","fetch","then","res","json","data","console","log","info","profile","location","id","className","src","height","style","align","name","role","href","phone","email","carrier","class","education","map","value","grad","board","percent","year","skills","skill","hobbies","hobby","Interests","int","Home","profiles","index","key","width","fontStyle","boxShadow","to","pathname","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.e37ee630.chunk.js","sourcesContent":["import React from 'react';\r\nimport data from './data.json';\r\nimport profile from './images/images.png';\r\n\r\n\r\nexport default function resume(props) {\r\n    fetch('https:/jsonplaceholder.typicode.com/posts')\r\n        .then(res => res.json())\r\n        .then(data =>\r\n            console.log(data))\r\n    let info = data.profile[props.location.data.id];\r\n    console.log(info)\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-3 m-2\">\r\n                <div className=\"card shadow\">\r\n                    <img src={profile} height=\"300\" style={{ align: \"center\" }} />\r\n                    <div className=\"card-body text-center\">\r\n                        <h1>{info.data.name}</h1>\r\n                        <div className=\"card-text\">\r\n                            <h4>{info.data.role}</h4>\r\n                        </div>\r\n                        <a href={\"tel\" + info.phone}>{info.data.phone}</a><br />\r\n                        <a href={\"mailto\" + info.email}>{info.data.email}</a>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-8 m-2\">\r\n                <div className=\"card shadow\">\r\n                    <h2>Carrier Objective</h2>\r\n                    <p>{info.data.carrier}</p>\r\n                    <hr />\r\n                    <h2>Education Profile</h2>\r\n                    <table class=\"table table-bordered table-hover table-sm\">\r\n                        <thead class=\"table-dark\">\r\n                            <tr>\r\n                                <th>S.no</th>\r\n                                <th>Graduation</th>\r\n                                <th>Institution</th>\r\n                                <th>Board</th>\r\n                                <th>Percentage</th>\r\n                                <th>Year of Passing</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {info.data.education.map((value) => (\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>{value.id}</td>\r\n                                    <td>{value.grad}</td>\r\n                                    <td>{value.name}</td>\r\n                                    <td>{value.board}</td>\r\n                                    <td>{value.percent}</td>\r\n                                    <td>{value.year}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        ))}\r\n                    </table><br/>\r\n                    <h2>Skills</h2>\r\n                    <ul class=\"list-group\">\r\n                        {info.data.skills.map((value) => (\r\n                            <li class=\"list-group-item\">{value.skill}</li>\r\n                        ))}\r\n                    </ul><br/>\r\n                    <h2>Hobbies</h2>\r\n                    <ul class=\"list-group\">\r\n                        {info.data.hobbies.map((value) => (\r\n                            <li class=\"list-group-item\">{value.hobby}</li>\r\n                        ))}\r\n                    </ul><br/>\r\n                    <h2>Interests</h2>\r\n                    <ul class=\"list-group\">\r\n                        {info.data.Interests.map((value) => (\r\n                            <li class=\"list-group-item\">{value.int}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport './bootstrap/css/bootstrap.min.css';\nimport profile from './images/images.png';\nimport data from './data.json';\n// import Greet from './Greeting';\n// import Counter from './Counter';\n// import State from './StateConcept';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport resume from './resume';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route exact path='/react-app' component={Home} />\n      <Route exact path='/' component={Home} />\n      <Route exact path='/resume' component={resume} />\n    </BrowserRouter>\n\n  );\n  // {/* <h1>Welcome to chrome</h1>\n  //     <h2>Let's start with react</h2>\n  //     <Greet name=\"krishna\"></Greet>\n  //     <Counter></Counter>\n  //     <State></State> */}\n\n}\n\nlet Home = () => {\n  let profiles = data.profile;\n  return (\n    <div className=\"row justify-content-center\">\n      {profiles.map((value,index) => (\n\n        < div className=\"col-lg-4 col-md-4 col-sm-10 mt-5\" key={index}>\n          <div className=\"card\" style={{ width: \"18rem\", fontStyle: \"italic\", boxShadow: \"0px 8px 8px -8px #000\" }}>\n            <img src={profile} height=\"300\" style={{ align: \"center\" }} />\n            <div className=\"card-body text-center\">\n              <h1>{value.data.name}</h1>\n              <div className=\"card-text\">\n                <h4>{value.data.role}</h4>\n              </div>\n              <a href={\"tel\" + value.phone}>{value.data.phone}</a><br />\n              <a href={\"mailto\" + value.email}>{value.data.email}</a>\n              <Link to={{ pathname: '/resume',data:{id:index}}} className=\"btn btn-primary\">View Profile</Link>\n            </div>\n          </div>\n        </div >))}\n\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/images.49063bfa.png\";"],"sourceRoot":""}